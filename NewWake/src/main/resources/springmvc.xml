<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xmlns:context="http://www.springframework.org/schema/context" 
	 xmlns:aop="http://www.springframework.org/schema/aop"
	 xmlns:mvc="http://www.springframework.org/schema/mvc"
	 xsi:schemaLocation="http://www.springframework.org/schema/mvc 
	  	http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans 
	  	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
		http://www.springframework.org/schema/context 
	  	http://www.springframework.org/schema/context/spring-context-4.1.xsd">

    <!-- 启用spring mvc 注解 -->
    <context:annotation-config />
    
	<!-- 组件扫描,扫描所有带有 @controller 注解的类,这个是使用springmvc的容器 -->
	<context:component-scan base-package="com.sunwin.web"/>
	
	<!-- 完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
    
    <!-- 自动注册组件 -->
    <mvc:annotation-driven/>
    
	<mvc:default-servlet-handler/>
	<!-- 对静态资源文件的访问  restful-->
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/images/**" location="/images/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/uploadFile/**" location="/uploadFile/" />
	
	<!-- 视图解析器,默认加载JSTL -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 配置JSP视图前缀 -->
		<property name="prefix" value="/WEB-INF/views/" />
		<!-- 配置JSP视图后缀 -->
		<property name="suffix" value=".jsp" />
	</bean>
	
	<aop:aspectj-autoproxy proxy-target-class="true" /> 
	
	<!-- AOP式方法级权限检查  -->	
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>	
	
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
	  <property name="exceptionMappings">
		   <props>
		    <!-- 这里你可以根据需要定义N多个错误异常转发 -->
		    <prop key="org.apache.shiro.authz.UnauthorizedException">redirect:/to500.do</prop>
		    <prop key="org.apache.shiro.authz.UnauthenticatedException">redirect:/toNoSession.do</prop>
		  <!--   <prop key="java.lang.IllegalArgumentException">redirect:/error/error.jsp</prop>  参数错误(bizError.jsp) -->
		  <!--  <prop key="java.lang.Exception">redirect:/error/error.jsp</prop>    其他错误为'未定义错误'(unknowError.jsp) -->
		   </props>
	  </property>
  </bean>
	
</beans>